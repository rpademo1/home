{"version":3,"sources":["components/pages/DashboardPage.js","components/pages/WelcomePage.js","components/pages/PricePage.js","components/Routes.js","components/topNavigation.js","components/sideNavigation.js","App.js","registerServiceWorker.js","index.js","assets/mdb-react.png"],"names":["DashboardPage","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleClose","e","setState","open","handleSubmit","event","preventDefault","push","history","setTimeout","state","vertical","horizontal","react_default","a","createElement","className","Form_default","onSubmit","Group","controlId","bsSize","Label","Control","type","placeholder","Button_default","block","Snackbar_default","anchorOrigin","key","concat","onClose","ContentProps","aria-describedby","message","id","Component","WelcomePage","rand","Math","random","round","style","display","plaintext","readOnly","value","lib","text","PricePage","Table_default","striped","bordered","hover","responsive","variant","Routes","Switch","Route","path","component","React","TopNavigation","collapse","onClick","toggle","dropdownOpen","mdbreact_esm","light","expand","scrolling","href","isOpen","navbar","left","alt","src","logo","App","topNavigation","sideNavigation","components_Routes","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","render","BrowserRouter","src_App","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.fd8df4d6.chunk.js","sourcesContent":["    import React, { Component } from \"react\";\n    import Form from 'react-bootstrap/Form';\n    import Button from 'react-bootstrap/Button';\n    import Bootstrap from \"react-bootstrap\";\n    import Snackbar from '@material-ui/core/Snackbar';\n    import \"./Login.css\";\n\n    export default class DashboardPage extends Component {\n      constructor(props) {\n        super(props);\n        this.state = {\n          open: false,\n          vertical: 'center',\n          horizontal: 'center',\n        }\n        \n      }\n\n\n      handleClose = (e) => {\n        this.setState({open: false });\n        // this.props.history.push(\"https://google.com\");\n        // setTimeout(()=>push(to), 1000);\n        \n      }\n      \n\n      handleSubmit = event => {\n        event.preventDefault();\n        this.setState({ open: true});\n        const { history: { push } } = this.props;\n        event.preventDefault();\n        setTimeout(()=>push(\"/welcome\"), 3000);\n      }\n\n      render() {\n        var open = this.state.open;\n        var vertical = this.state.vertical;\n        var horizontal = this.state.horizontal;\n        return (\n          <div className=\"DashboardPage\">\n            <Form onSubmit={this.handleSubmit}>\n              <Form.Group controlId=\"email\" bsSize=\"large\">\n              <Form.Label>Username</Form.Label>\n              <Form.Control type=\"text\" placeholder=\"Username\"/>\n              </Form.Group>\n              <Form.Group controlId=\"password\" bsSize=\"large\">\n              <Form.Label>Password</Form.Label>\n                <Form.Control\n                  placeholder=\"Password\"\n                  type=\"password\"\n                />\n              </Form.Group>\n              <Button\n                block\n                bsSize=\"large\"\n                type=\"submit\"\n              >\n                Login\n              </Button>\n              <Snackbar\n                anchorOrigin={{ vertical, horizontal }}\n                key={`${vertical},${horizontal}`}\n                open={open}\n                onClose={this.handleClose}\n                ContentProps={{\n                  'aria-describedby': 'message-id',\n                }}\n                message={<span id=\"message-id\">Login Successful. Redirect after 3 seconds\n                </span>}\n              />\n            </Form>\n          </div>\n        );\n      }\n    }","    import React, { Component } from \"react\";\n    import Form from 'react-bootstrap/Form';\n    import Button from 'react-bootstrap/Button';\n    import Bootstrap from \"react-bootstrap\";\n    import {CopyToClipboard} from 'react-copy-to-clipboard';\n    import \"./Welcome.css\";\n\n    export default class WelcomePage extends Component {\n      constructor(props) {\n        super(props);\n        this.state = {\n          random:0,\n          open: 'none'\n        }\n        \n      }\n\n      handleSubmit = event => {\n        event.preventDefault();\n        const min = 10000;\n        const max = 99999;\n        const rand = min + Math.random() * (max - min);\n        const round = Math.round(rand);\n        this.setState({ random: \"SVT\"+round, open: 'inline' });\n      }\n\n      render() {\n        var random = this.state.random;\n        var open = this.state.open;\n        var style = {display:open};\n        var stylea = {display:'none'};\n        return (\n          <div className=\"WelcomePage\">\n            <Form onSubmit={this.handleSubmit}>\n              <Form.Group controlId=\"name\" bsSize=\"large\">\n              <Form.Control type=\"text\" placeholder=\"Họ và tên chủ hộ\"/>\n              </Form.Group>\n              <Form.Group controlId=\"address\" bsSize=\"large\">\n                <Form.Control placeholder=\"Địa chỉ\" type=\"text\" />\n              </Form.Group>\n              <Form.Group controlId=\"Số nhân khẩu\" bsSize=\"large\">\n                <Form.Control placeholder=\"Số nhân khẩu\" type=\"number\" />\n              </Form.Group>\n              <Button\n                block\n                bsSize=\"large\"\n                type=\"submit\"\n              >\n                Submit\n              </Button>\n              <br/>\n              <div style={style}>\n                <Form.Label>Mã số khách hàng: </Form.Label>\n                <Form.Control plaintext readOnly value={random} />\n              </div>\n              \n            </Form>\n\n            <div className=\"copy\" style={stylea}>\n            <CopyToClipboard text={this.state.random}>\n              <button>Copy</button>\n            </CopyToClipboard>\n            </div>\n          </div>\n        );\n      }\n    }","    import React, { Component } from \"react\";\n    import Bootstrap from \"react-bootstrap\";\n    import Table from 'react-bootstrap/Table'\n\n    export default class PricePage extends Component {\n      constructor(props) {\n        super(props);\n        \n      }\n\n\n      render() {\n        return (\n          <div className=\"PricePage\">\n            <Table striped bordered hover responsive variant=\"dark\">\n              <thead>\n                <tr>\n                  <th>STT</th>\n                  <th>Mã vật tư</th>\n                  <th>Tên vật tư</th>\n                  <th>Đơn vị tính</th>\n                  <th>Đơn giá</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr>\n                  <td>1</td>\n                  <td>ON21</td>\n                  <td>Ống nước d21</td>\n                  <td>mét</td>\n                  <td>7000</td>\n                </tr>\n                <tr>\n                  <td>2</td>\n                  <td>ON27</td>\n                  <td>Ống nước d27</td>\n                  <td>mét</td>\n                  <td>14000</td>\n                </tr>\n                <tr>\n                  <td>3</td>\n                  <td>KDO</td>\n                  <td>Keo dán ống</td>\n                  <td>chai</td>\n                  <td>8000</td>\n                </tr>\n              </tbody>\n            </Table>\n\n            \n          </div>\n        );\n      }\n    }","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport DashboardPage from './pages/DashboardPage';\nimport WelcomePage from './pages/WelcomePage';\nimport PricePage from './pages/PricePage';\n\nclass Routes extends React.Component {\n  render() {\n    return (\n      <Switch>\n        <Route path='/rpaweb' component={DashboardPage} />\n        <Route path='/welcome' component={WelcomePage} />\n        <Route path='/price' component={PricePage} />\n      </Switch>\n    );\n  }\n}\n\nexport default Routes;\n","import React, { Component } from 'react';\nimport { MDBNavbar, MDBNavbarBrand, MDBNavbarNav, MDBNavbarToggler, MDBCollapse, MDBNavItem, MDBNavLink, MDBIcon } from 'mdbreact';\n\nclass TopNavigation extends Component {\n    state = {\n        collapse: false\n    }\n\n    onClick = () => {\n        this.setState({\n            collapse: !this.state.collapse,\n        });\n    }\n\n    toggle = () => {\n        this.setState({\n            dropdownOpen: !this.state.dropdownOpen\n        });\n    }\n\n    render() {\n        return (\n            <MDBNavbar className=\"flexible-navbar\" light expand=\"md\" scrolling>\n                <MDBNavbarBrand href=\"/\">\n                    <strong>RPA</strong>\n                </MDBNavbarBrand>\n                <MDBNavbarToggler onClick = { this.onClick } />\n                <MDBCollapse isOpen = { this.state.collapse } navbar>\n                    <MDBNavbarNav left>\n                        \n                    </MDBNavbarNav>\n                </MDBCollapse>\n            </MDBNavbar>\n        );\n    }\n}\n\nexport default TopNavigation;","import React from 'react';\nimport logo from \"../assets/mdb-react.png\";\nimport { MDBListGroup, MDBListGroupItem, MDBIcon } from 'mdbreact';\nimport { NavLink } from 'react-router-dom';\n\nconst TopNavigation = () => {\n    return (\n        <div className=\"sidebar-fixed position-fixed\">\n            <a href=\"#!\" className=\"logo-wrapper waves-effect\">\n                <img alt=\"MDB React Logo\" className=\"img-fluid\" src={logo}/>\n            </a>\n            \n        </div>\n    );\n}\n\nexport default TopNavigation;","import React, { Component } from 'react';\nimport Routes from '../src/components/Routes';\nimport TopNavigation from './components/topNavigation';\nimport SideNavigation from './components/sideNavigation';\nimport Footer from './components/Footer';\nimport './index.css';\n\nclass App extends Component {\n  \n  render() {\n    return (\n        <div className=\"flexible-content\">\n          <TopNavigation />\n          <SideNavigation />\n          <main id=\"content\" className=\"p-5\">\n            <Routes />\n          </main>\n        </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport 'bootstrap-css-only/css/bootstrap.min.css';\nimport 'mdbreact/dist/css/mdb.css';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\n\nReactDOM.render(<Router><App /></Router>, document.getElementById('root'));\nregisterServiceWorker();\n","module.exports = __webpack_public_path__ + \"static/media/mdb-react.750b5338.png\";"],"sourceRoot":""}